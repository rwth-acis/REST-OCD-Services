"Calculate local density $\rho$";"The local density $\rho_i$ of node $i$ is defined as follows: \begin{align} \rho_i = \sum_j \chi (d_{ij} - d_c) \end{align} where $\chi (x) = 1$ if $x \leq 0$, otherwise $\chi (x) = 0$. $d_c$ is a cutoff distance, and $d_{ij}$ is the distance between nodes $i$ and node $j$. Here, we take the shortest path length between nodes as distance $d_{ij}$, which signifies that the result is robust in terms of the selection of cutoff distance $d_{ij}$. The magnitude of cutoff distance $d_c$ changes in different measurements."
"Nodes with maximal local density";"These are the nodes with the highest local density $\rho$ of the first step."
"Neighbors of cluster nodes";"The neighbor nodes $n$ of a cluster are those, which satisfies the following three conditions: (1) There is an edge from a node in the cluster set to $n$. (2) $n$ does not belong to the cluster. (3) $n$ is a node that is not assigned to a community yet."
"Calculate node fitness $f_G^A$";"The node fitness $f_G^A$ for a sub-graph $G$ and node $A$ is defined as follows: \begin{align} f_G^A = f_{G + \{ A \} } - f_{G - \{ A \} } \end{align} where $f_{G + \{ A \} }$ and $f_{G - \{ A \} }$ represent whether node $A$ is or is not included in sub-graph $G$, respectively and $f_G$ is calculated as follows: \begin{align} f_G = \frac{k_{in}^G}{(k_{in}^G + k_{out}^G)^{\alpha}} \end{align} Where respectively, $k_{in}^G$ is the inner degrees of community $G$, $k_{out}^G$ is the external degrees of community $G$ and $\alpha$ is a positive-real tunable parameter to control the size of a community. The larger the value of $\alpha$, the smaller the community size is."
"Neighbor nodes with highest fitness value";"Mark all nodes with maximal fitness value of their corresponding cluster."
"Cliques of size at least $k$";"Let $G = (V, E)$ be the undirected input graph, where $V$ is the set of vertices and $E$ is the set of edges. A $k$-clique in $G$ is a subset $C \subseteq V$ such that: $|C| = k$ and for every pair of vertices $u, v \in C, \ u \not = v$, there exists an edge in $E$ connecting node $u$ and node $v$, i.e., $(u, v) \in E$."
"Add all $k$-cliques to corrosponding clusters";"If the fitness value of the nodes of the second last  step is $\geq 0$, then all its $k$-cliques are added to the underlying cluster. If no $k$-clique exists, then just the node itself is added to the cluster."
"Remove nodes with negative fitness values";"Now the fitness values are recalculated. If there is a node with a negative fitness value, it is removed from the underlying cluster. The process of step 4 to 8 are looped until all nodes in the graph are assigned to at least one community."
"Node memberships to the communities";The nodes of the graph are involved in the communities whose membership value $m$ is $>0$ and are indicated in this step."
"Assign nodes to communities";"Node $i$ is assigned to the community with membership value $m_i=1$. If the membership value $m_i \in (0, 1)$, then it is an overlapping node and is assigned to all communities $j$ with $m_i(j) > 0$."
"Result of LOC Algorithm";"This is the final result of the LOC algorithm."